{
  "version": 3,
  "sources": ["../../@wotz/livewire-sortablejs/node_modules/sortablejs/modular/sortable.esm.js", "../../@wotz/livewire-sortablejs/src/index.js"],
  "sourcesContent": ["/**!\n * Sortable 1.15.1\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.15.1\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction matches( /**HTMLElement*/el, /**String*/selector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n  return false;\n}\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\nfunction closest( /**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n  return null;\n}\nvar R_SPACE = /\\s+/g;\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\nfunction css(el, prop, val) {\n  var style = el && el.style;\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n  return matrixFn && new matrixFn(appliedTransforms);\n}\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n    return list;\n  }\n  return [];\n}\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode;\n\n    // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect();\n\n          // Set relative to edges of padding box of container\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n      } while (container = container.parentNode);\n    }\n  }\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n/**\r\n * Returns the content rect of the element (bounding rect minus border and padding)\r\n * @param {HTMLElement} el \r\n */\nfunction getContentRect(el) {\n  var rect = getRect(el);\n  var paddingLeft = parseInt(css(el, 'padding-left')),\n    paddingTop = parseInt(css(el, 'padding-top')),\n    paddingRight = parseInt(css(el, 'padding-right')),\n    paddingBottom = parseInt(css(el, 'padding-bottom'));\n  rect.top += paddingTop + parseInt(css(el, 'border-top-width'));\n  rect.left += paddingLeft + parseInt(css(el, 'border-left-width'));\n  // Client Width/Height includes padding only\n  rect.width = el.clientWidth - paddingLeft - paddingRight;\n  rect.height = el.clientHeight - paddingTop - paddingBottom;\n  rect.bottom = rect.top + rect.height;\n  rect.right = rect.left + rect.width;\n  return rect;\n}\n\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n    elSideVal = getRect(el)[elSide];\n\n  /* jshint boss:true */\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n      visible = void 0;\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n  return false;\n}\n\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n    i = 0,\n    children = el.children;\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n    i++;\n  }\n  return null;\n}\n\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n  return last || null;\n}\n\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\nfunction index(el, selector) {\n  var index = 0;\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n\n  /* jshint boss:true */\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n  return index;\n}\n\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n  return [offsetLeft, offsetTop];\n}\n\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while (elem = elem.parentNode);\n  return getWindowScrollingElement();\n}\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n  return dst;\n}\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\nvar _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n        _this = this;\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n    animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect);\n\n        // If animating: compensate for current animation\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n      var animating = false,\n        animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n          target = state.target,\n          fromRect = target.fromRect,\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n        target.toRect = toRect;\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) &&\n          // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        }\n\n        // if fromRect != toRect: animate\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n          if (!time) {\n            time = _this.options.animation;\n          }\n          _this.animate(target, animatingRect, toRect, time);\n        }\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\nfunction repaint(target) {\n  return target.offsetWidth;\n}\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n    this.eventCanceled = false;\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return;\n      // Fire global events if it exists in this sortable\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n\n      // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized;\n\n      // Add default options from plugin\n      _extends(defaults, initialized.defaults);\n    });\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return;\n\n      // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n    rootEl = _ref.rootEl,\n    name = _ref.name,\n    targetEl = _ref.targetEl,\n    cloneEl = _ref.cloneEl,\n    toEl = _ref.toEl,\n    fromEl = _ref.fromEl,\n    oldIndex = _ref.oldIndex,\n    newIndex = _ref.newIndex,\n    oldDraggableIndex = _ref.oldDraggableIndex,\n    newDraggableIndex = _ref.newDraggableIndex,\n    originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n    options = sortable.options,\n    onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    originalEvent = _ref.evt,\n    data = _objectWithoutProperties(_ref, _excluded);\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\nvar dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [],\n  // (left, top)\n\n  _silent = false,\n  savedInputChecked = [];\n\n/** @const */\nvar documentExists = typeof document !== 'undefined',\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n  supportCssPointerEvents = function () {\n    if (!documentExists) return;\n    // false when <= IE11\n    if (IE11OrLess) {\n      return false;\n    }\n    var el = document.createElement('x');\n    el.style.cssText = 'pointer-events:auto';\n    return el.style.pointerEvents === 'auto';\n  }(),\n  _detectDirection = function _detectDirection(el, options) {\n    var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n    if (elCSS.display === 'flex') {\n      return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n    }\n    if (elCSS.display === 'grid') {\n      return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n    }\n    if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n      var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n      return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n    }\n    return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n  },\n  _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n    var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n    return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n  },\n  /**\r\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n   * @param  {Number} x      X position\r\n   * @param  {Number} y      Y position\r\n   * @return {HTMLElement}   Element of the first found nearest Sortable\r\n   */\n  _detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n    var ret;\n    sortables.some(function (sortable) {\n      var threshold = sortable[expando].options.emptyInsertThreshold;\n      if (!threshold || lastChild(sortable)) return;\n      var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n      if (insideHorizontally && insideVertically) {\n        return ret = sortable;\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function _prepareGroup(options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === 'clone') {\n          return value;\n        } else if (typeof value === 'function') {\n          return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n        } else {\n          var otherGroup = (pull ? to : from).options.group.name;\n          return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n        }\n      };\n    }\n    var group = {};\n    var originalGroup = options.group;\n    if (!originalGroup || _typeof(originalGroup) != 'object') {\n      originalGroup = {\n        name: originalGroup\n      };\n    }\n    group.name = originalGroup.name;\n    group.checkPull = toFn(originalGroup.pull, true);\n    group.checkPut = toFn(originalGroup.put);\n    group.revertClone = originalGroup.revertClone;\n    options.group = group;\n  },\n  _hideGhostForTarget = function _hideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', 'none');\n    }\n  },\n  _unhideGhostForTarget = function _unhideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', '');\n    }\n  };\n\n// #1184 fix - Prevent click event on fallback if dragged but item not changed position\nif (documentExists && !ChromeForAndroid) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n\n/**\r\n * @class  Sortable\r\n * @param  {HTMLElement}  el\r\n * @param  {Object}       [options]\r\n */\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n  this.el = el; // root element\n  this.options = options = _extends({}, options);\n\n  // Export instance\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults);\n\n  // Set default options\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n  _prepareGroup(options);\n\n  // Bind all private methods\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  }\n\n  // Setup drag mode\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  }\n\n  // Bind events\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n  sortables.push(this.el);\n\n  // Restore sorting\n  options.store && options.store.get && this.sort(options.store.get(this) || []);\n\n  // Add animation state manager\n  _extends(this, AnimationStateManager());\n}\nSortable.prototype = /** @lends Sortable.prototype */{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart( /** Event|TouchEvent */evt) {\n    if (!evt.cancelable) return;\n    var _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n      target = (touch || evt).target,\n      originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n      filter = options.filter;\n    _saveInputCheckedState(el);\n\n    // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n    if (dragEl) {\n      return;\n    }\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    }\n\n    // cancel dnd if original target is content editable\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    // Safari ignores further event handling after mousedown\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n    target = closest(target, options.draggable, el, false);\n    if (target && target.animated) {\n      return;\n    }\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    }\n\n    // Get the index of the dragged element within its parent\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable);\n\n    // Check filter\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    }\n\n    // Prepare `dragstart`\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart( /** Event */evt, /** Touch */touch, /** HTMLElement */target) {\n    var _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        }\n        // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n        _this._disableDelayedDragEvents();\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        }\n\n        // Bind the events: dragstart/dragend\n        _this._triggerDragStart(evt, touch);\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        });\n\n        // Chosen item\n        toggleClass(dragEl, options.chosenClass, true);\n      };\n\n      // Disable \"draggable\"\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop);\n\n      // Make dragEl draggable (must be before delay for FireFox)\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n      pluginEvent('delayStart', this, {\n        evt: evt\n      });\n\n      // Delay is impossible for native DnD in Edge or IE\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler( /** TouchEvent|PointerEvent **/e) {\n    var touch = e.touches ? e.touches[0] : e;\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart( /** Event */evt, /** Touch */touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n      var options = this.options;\n\n      // Apply effect\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost();\n\n      // Drag start event\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n      _hideGhostForTarget();\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n          target = parent; // store last element\n        }\n        /* jshint boss:true */ while (parent = parent.parentNode);\n      }\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove( /**TouchEvent*/evt) {\n    if (tapEvt) {\n      var options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n        dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n        dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1);\n\n      // only set the status to dragging, when we are actually dragging\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options;\n\n      // Position absolutely\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl);\n\n      // Set transform-origin\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart( /**Event*/evt, /**boolean*/fallback) {\n    var _this = this;\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n    pluginEvent('setupClone', this);\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.removeAttribute(\"id\");\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n      this._hideClone();\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    }\n\n    // #1143: IFrame support workaround\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true);\n\n    // Set proper drop events\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n      on(document, 'drop', _this);\n\n      // #1276 fix:\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver( /**Event*/evt) {\n    var el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n    if (_silent) return;\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    }\n\n    // Capture animation state\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    }\n\n    // Return invocation when dragEl is inserted (or completed)\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        }\n\n        // Animation\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      }\n\n      // Null lastTarget if it is not inside a previously swapped element\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      }\n\n      // no bubbling and not fallback\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n        // Do not detect for empty insert if already inserted\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    }\n\n    // Call when dragEl has been inserted\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n    ignoreNextClick = false;\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n      if (revert) {\n        parentEl = rootEl; // actualization\n        capture();\n        this._hideClone();\n        dragOverEvent('revert');\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n        return completed(true);\n      }\n      var elLastChild = lastChild(el, options.draggable);\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        }\n\n        // if there is a last element, it is the target\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n        if (target) {\n          targetRect = getRect(target);\n        }\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          if (elLastChild && elLastChild.nextSibling) {\n            // the last draggable element is not the last node\n            el.insertBefore(dragEl, elLastChild.nextSibling);\n          } else {\n            el.appendChild(dragEl);\n          }\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n        target = firstChild;\n        targetRect = getRect(target);\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n          side1 = vertical ? 'top' : 'left',\n          scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        }\n        // If dragEl is already beside target: Do not insert\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n          after = false;\n        after = direction === 1;\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          }\n\n          // Undo chrome's scroll adjustment (has no effect on other browsers)\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n          parentEl = dragEl.parentNode; // actualization\n\n          // must be done before animation\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n          changed();\n          return completed(true);\n        }\n      }\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop( /**Event*/evt) {\n    var el = this.el,\n      options = this.options;\n\n    // Get the index of the dragged element within its parent\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode;\n\n    // Get again after plugin event\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId);\n\n    // Unbind events\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n    css(dragEl, 'transform', '');\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n        _disableDraggable(dragEl);\n        dragEl.style['will-change'] = '';\n\n        // Remove classes\n        // ghostClass is added in dragStarted\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n        toggleClass(dragEl, this.options.chosenClass, false);\n\n        // Drag stop event\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            // Remove event\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n\n            // drag from one list and drop into another\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          });\n\n          // Save sorting\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent( /**Event*/evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n        break;\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n  /**\r\n   * Serializes the item into an array of string.\r\n   * @returns {String[]}\r\n   */\n  toArray: function toArray() {\n    var order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n    return order;\n  },\n  /**\r\n   * Sorts the elements according to the array.\r\n   * @param  {String[]}  order  order of the items\r\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n      rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n  /**\r\n   * Save the current sorting\r\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n  /**\r\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n   * @param   {HTMLElement}  el\r\n   * @param   {String}       [selector]  default: `options.draggable`\r\n   * @returns {HTMLElement|null}\r\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n  /**\r\n   * Set/get option\r\n   * @param   {string} name\r\n   * @param   {*}      [value]\r\n   * @returns {*}\r\n   */\n  option: function option(name, value) {\n    var options = this.options;\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n  /**\r\n   * Destroy\r\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    }\n    // Remove draggable attributes\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n    this._onDrop();\n    this._disableDelayedDragEvents();\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n      return;\n    }\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return;\n\n      // show clone at dragEl or original position\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\nfunction _globalDragOver( /**Event*/evt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n  evt.cancelable && evt.preventDefault();\n}\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal;\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n  return retVal;\n}\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\nfunction _unsilent() {\n  _silent = false;\n}\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var firstElRect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var sortableContentRect = getContentRect(sortable.el);\n  var spacer = 10;\n  return vertical ? evt.clientX < sortableContentRect.left - spacer || evt.clientY < firstElRect.top && evt.clientX < firstElRect.right : evt.clientY < sortableContentRect.top - spacer || evt.clientY < firstElRect.bottom && evt.clientX < firstElRect.left;\n}\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var lastElRect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var sortableContentRect = getContentRect(sortable.el);\n  var spacer = 10;\n  return vertical ? evt.clientX > sortableContentRect.right + spacer || evt.clientY > lastElRect.bottom && evt.clientX > lastElRect.left : evt.clientY > sortableContentRect.bottom + spacer || evt.clientX > lastElRect.right && evt.clientY > lastElRect.top;\n}\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n  invert = invert || invertSwap;\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n  return 0;\n}\n\n/**\r\n * Gets the direction dragEl must be swapped relative to target in order to make it\r\n * seem that dragEl has been \"inserted\" into that element's position\r\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n * @return {Number}                   Direction dragEl must be swapped\r\n */\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\r\n * Generate id\r\n * @param   {HTMLElement} el\r\n * @returns {String}\r\n * @private\r\n */\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n  return sum.toString(36);\n}\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n}\n\n// Fixed #973:\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n}\n\n// Export utils\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n\n/**\r\n * Get the Sortable instance of an element\r\n * @param  {HTMLElement} element The element\r\n * @return {Sortable|undefined}         The instance of Sortable\r\n */\nSortable.get = function (element) {\n  return element[expando];\n};\n\n/**\r\n * Mount a plugin to Sortable\r\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n */\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n\n/**\r\n * Create sortable instance\r\n * @param {HTMLElement}  el\r\n * @param {Object}      [options]\r\n */\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n};\n\n// Export\nSortable.version = version;\n\nvar autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt$1,\n  pointerElemChangedInterval;\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    };\n\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt;\n\n      // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback);\n\n        // Listener for pointer element change\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval();\n          // Detect for pointer elem change, emulating native DnD behaviour\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n    scrollCustomFn;\n\n  // New scroll root, set scrollEl\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n  var layersOut = 0;\n  var currentParent = scrollEl;\n  do {\n    var el = currentParent,\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX = void 0,\n      canScrollY = void 0,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n          }\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    dragEl = _ref.dragEl,\n    activeSortable = _ref.activeSortable,\n    dispatchSortableEvent = _ref.dispatchSortableEvent,\n    hideGhostForTarget = _ref.hideGhostForTarget,\n    unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\nfunction Revert() {}\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n      putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\nfunction Remove() {}\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n      putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n        target = _ref2.target,\n        onMove = _ref2.onMove,\n        activeSortable = _ref2.activeSortable,\n        changed = _ref2.changed,\n        cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n        putSortable = _ref3.putSortable,\n        dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect,\n  // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false,\n  // Initial multi-drag fold when drag started\n  folding = false,\n  // Folding any other time\n  dragStarted = false,\n  dragEl$1,\n  clonesFromRect,\n  clonesHidden;\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n    if (!sortable.options.avoidImplicitDeselect) {\n      if (sortable.options.supportPointer) {\n        on(document, 'pointerup', this._deselectMultiDrag);\n      } else {\n        on(document, 'mouseup', this._deselectMultiDrag);\n        on(document, 'touchend', this._deselectMultiDrag);\n      }\n    }\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      avoidImplicitDeselect: false,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n        cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n      sortable._hideClone();\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n        rootEl = _ref3.rootEl,\n        dispatchSortableEvent = _ref3.dispatchSortableEvent,\n        cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n        rootEl = _ref4.rootEl,\n        cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n      var sortable = _ref5.sortable,\n        cloneNowHidden = _ref5.cloneNowHidden,\n        cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      });\n\n      // Sort multi-drag elements\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n\n        sortable.captureAnimationState();\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        }\n\n        // Remove all auxiliary multidrag items from el, if sorting enabled\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n        completed = _ref8.completed,\n        cancel = _ref8.cancel;\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n        rootEl = _ref9.rootEl,\n        sortable = _ref9.sortable,\n        dragRect = _ref9.dragRect;\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n        isOwner = _ref10.isOwner,\n        insertion = _ref10.insertion,\n        activeSortable = _ref10.activeSortable,\n        parentEl = _ref10.parentEl,\n        putSortable = _ref10.putSortable;\n      var options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n        initialFolding = false;\n        // If leaving sort:false root, or already folding - Fold to new location\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute);\n\n            // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        }\n\n        // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable);\n\n            // Unfold animation for clones if showing from hidden\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n        isOwner = _ref11.isOwner,\n        activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n        rootEl = _ref12.rootEl,\n        parentEl = _ref12.parentEl,\n        sortable = _ref12.sortable,\n        dispatchSortableEvent = _ref12.dispatchSortableEvent,\n        oldIndex = _ref12.oldIndex,\n        putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n        children = parentEl.children;\n\n      // Multi-drag selection\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n\n          // Modifier activated, select from last to dragEl\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n              currentIndex = index(dragEl$1);\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvent: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n        }\n      }\n\n      // Multi-drag drop\n      if (dragStarted && this.isMultiDrag) {\n        folding = false;\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n            multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect;\n\n                  // Prepare unfold animation\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            }\n\n            // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            });\n\n            // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n              if (update) {\n                dispatchSortableEvent('update');\n                dispatchSortableEvent('sort');\n              }\n            }\n          }\n\n          // Must be done after capturing individual rects (scroll bar)\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n        multiDragSortable = toSortable;\n      }\n\n      // Remove clones if necessary\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n      // Only deselect if selection is in this sortable\n      if (multiDragSortable !== this.sortable) return;\n\n      // Only deselect if target is not item in this sortable\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return;\n\n      // Only deselect if left click\n      if (evt && evt.button !== 0) return;\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvent: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n      var oldIndicies = [],\n        newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        });\n\n        // multiDragElements will already be sorted if folding\n        var newIndex;\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      }\n    }\n  });\n}\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n", "import Sortable from 'sortablejs';\n\nwindow.Sortable = Sortable;\n\nconst moveEndMorphMarker = (el) => {\n    const endMorphMarker = Array.from(el.childNodes).filter((childNode) => {\n        return childNode.nodeType === 8 && ['[if ENDBLOCK]><![endif]', '__ENDBLOCK__'].includes(childNode.nodeValue?.trim());\n    })[0];\n\n    if (endMorphMarker) {\n        el.appendChild(endMorphMarker);\n    }\n}\n\nwindow.Livewire?.directive('sortable', ({ el, directive, component }) => {\n    // Only fire this handler on the \"root\" directive.\n    if (directive.modifiers.length > 0) {\n        return;\n    }\n\n    let options = {};\n\n    if (el.hasAttribute('wire:sortable.options')) {\n        options = (new Function(`return ${el.getAttribute('wire:sortable.options')};`))();\n    }\n\n    el.livewire_sortable = window.Sortable.create(el, {\n        sort: true,\n        ...options,\n        draggable: '[wire\\\\:sortable\\\\.item]',\n        handle: el.querySelector('[wire\\\\:sortable\\\\.handle]') ? '[wire\\\\:sortable\\\\.handle]' : null,\n        dataIdAttr: 'wire:sortable.item',\n        group: {\n            pull: false,\n            put: false,\n            ...options.group,\n            name: el.getAttribute('wire:sortable'),\n        },\n        store: {\n            ...options.store,\n            set: function (sortable) {\n                let items = sortable.toArray().map((value, index) => {\n                    return {\n                        order: index + 1,\n                        value: value,\n                    };\n                });\n\n                moveEndMorphMarker(el);\n\n                component.$wire.call(directive.method, items);\n            },\n        },\n    });\n\n    let hasSetHandleCorrectly = el.querySelector('[wire\\\\:sortable\\\\.item]') !== null;\n\n    // If there are already items, then the 'handle' option has already been correctly set.\n    // The option does not have to reevaluated after the next Livewire component update.\n    if (hasSetHandleCorrectly) {\n        return;\n    }\n\n    const currentComponent = component;\n\n    Livewire.hook('commit', ({ component, succeed }) => {\n        if (component.id !== currentComponent.id) {\n            return;\n        }\n\n        if (hasSetHandleCorrectly) {\n            return;\n        }\n\n        succeed(() => {\n            queueMicrotask(() => {\n                el.livewire_sortable.option('handle', el.querySelector('[wire\\\\:sortable\\\\.handle]') ? '[wire\\\\:sortable\\\\.handle]' : null);\n\n                hasSetHandleCorrectly = el.querySelector('[wire\\\\:sortable\\\\.item]') !== null;\n            });\n        });\n    });\n});\n\nwindow.Livewire?.directive('sortable-group', ({ el, directive, component }) => {\n    // Only fire this handler on the \"root\" group directive.\n    if (! directive.modifiers.includes('item-group')) {\n        return;\n    }\n\n    let options = {};\n\n    if (el.hasAttribute('wire:sortable-group.options')) {\n        options = (new Function(`return ${el.getAttribute('wire:sortable-group.options')};`))();\n    }\n\n    el.livewire_sortable = window.Sortable.create(el, {\n        sort: true,\n        ...options,\n        draggable: '[wire\\\\:sortable-group\\\\.item]',\n        handle: '[wire\\\\:sortable-group\\\\.handle]',\n        dataIdAttr: 'wire:sortable-group.item',\n        group: {\n            pull: true,\n            put: true,\n            ...options.group,\n            name: el.closest('[wire\\\\:sortable-group]').getAttribute('wire:sortable-group'),\n        },\n        onSort: (evt) => {\n            if (evt.to !== evt.from && el === evt.from) {\n                return;\n            }\n\n            let masterEl = el.closest('[wire\\\\:sortable-group]');\n\n            let groups = Array.from(masterEl.querySelectorAll('[wire\\\\:sortable-group\\\\.item-group]')).map((el, index) => {\n                moveEndMorphMarker(el);\n\n                return {\n                    order: index + 1,\n                    value: el.getAttribute('wire:sortable-group.item-group'),\n                    items:  el.livewire_sortable.toArray().map((value, index) => {\n                        return {\n                            order: index + 1,\n                            value: value\n                        };\n                    }),\n                };\n            });\n\n            masterEl.closest('[wire\\\\:id]').__livewire.$wire.call(masterEl.getAttribute('wire:sortable-group'), groups);\n        },\n    });\n});\n"],
  "mappings": "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",
  "names": ["ownKeys", "object", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread2", "target", "i", "source", "key", "_defineProperty", "_typeof", "obj", "value", "_extends", "_objectWithoutPropertiesLoose", "excluded", "sourceKeys", "_objectWithoutProperties", "sourceSymbolKeys", "version", "userAgent", "pattern", "IE11OrLess", "Edge", "FireFox", "Safari", "IOS", "ChromeForAndroid", "captureMode", "on", "el", "event", "fn", "off", "matches", "selector", "getParentOrHost", "closest", "ctx", "includeCTX", "R_SPACE", "toggleClass", "name", "state", "className", "css", "prop", "val", "style", "matrix", "selfOnly", "appliedTransforms", "transform", "matrixFn", "find", "tagName", "iterator", "list", "n", "getWindowScrollingElement", "scrollingElement", "getRect", "relativeToContainingBlock", "relativeToNonStaticParent", "undoScale", "container", "elRect", "top", "left", "bottom", "right", "height", "width", "containerRect", "elMatrix", "scaleX", "scaleY", "getContentRect", "rect", "paddingLeft", "paddingTop", "paddingRight", "paddingBottom", "isScrolledPast", "elSide", "parentSide", "parent", "getParentAutoScrollElement", "elSideVal", "parentSideVal", "visible", "getChild", "childNum", "options", "includeDragEl", "currentChild", "children", "Sortable", "lastChild", "last", "index", "getRelativeScrollOffset", "offsetLeft", "offsetTop", "winScroller", "indexOfObject", "arr", "includeSelf", "elem", "gotSelf", "elemCSS", "extend", "dst", "src", "isRectEqual", "rect1", "rect2", "_throttleTimeout", "throttle", "callback", "ms", "args", "_this", "cancelThrottle", "scrollBy", "x", "y", "clone", "Polymer", "$", "expando", "AnimationStateManager", "animationStates", "animationCallbackId", "child", "fromRect", "childMatrix", "animating", "animationTime", "time", "toRect", "prevFromRect", "prevToRect", "animatingRect", "targetMatrix", "calculateRealTime", "currentRect", "duration", "translateX", "translateY", "repaint", "plugins", "defaults", "PluginManager", "plugin", "option", "p", "eventName", "sortable", "evt", "eventNameGlobal", "pluginName", "initialized", "modified", "eventProperties", "modifiedValue", "dispatchEvent", "_ref", "rootEl", "targetEl", "cloneEl", "toEl", "fromEl", "oldIndex", "newIndex", "oldDraggableIndex", "newDraggableIndex", "originalEvent", "putSortable", "extraEventProperties", "onName", "allEventProperties", "_excluded", "pluginEvent", "data", "dragEl", "parentEl", "ghostEl", "nextEl", "lastDownEl", "cloneHidden", "moved", "_hideGhostForTarget", "_unhideGhostForTarget", "_dispatchEvent", "info", "activeGroup", "awaitingDragStarted", "ignoreNextClick", "sortables", "tapEvt", "touchEvt", "lastDx", "lastDy", "tapDistanceLeft", "tapDistanceTop", "lastTarget", "lastDirection", "pastFirstInvertThresh", "isCircumstantialInvert", "targetMoveDistance", "ghostRelativeParent", "ghostRelativeParentInitialScroll", "_silent", "savedInputChecked", "documentExists", "PositionGhostAbsolutely", "CSSFloatProperty", "supportDraggable", "supportCssPointerEvents", "_detectDirection", "elCSS", "elWidth", "child1", "child2", "firstChildCSS", "secondChildCSS", "firstChildWidth", "secondChildWidth", "touchingSideChild2", "_dragElInRowColumn", "dragRect", "targetRect", "vertical", "dragElS1Opp", "dragElS2Opp", "dragElOppLength", "targetS1Opp", "targetS2Opp", "targetOppLength", "_detectNearestEmptySortable", "ret", "threshold", "insideHorizontally", "insideVertically", "_prepareGroup", "toFn", "pull", "to", "from", "sameGroup", "otherGroup", "group", "originalGroup", "nearestEmptyInsertDetectEvent", "nearest", "_checkOutsideTargetEl", "dataTransfer", "preventOnFilter", "type", "touch", "originalTarget", "filter", "_saveInputCheckedState", "criteria", "ownerDocument", "dragStartFn", "_disableDraggable", "e", "_nextTick", "fallback", "inserted", "fallbackTolerance", "fallbackOffset", "ghostMatrix", "relativeScrollOffset", "dx", "dy", "cssMatrix", "revert", "activeSortable", "isOwner", "canSort", "fromSortable", "completedFired", "dragOverEvent", "extra", "completed", "after", "_onMove", "changed", "capture", "insertion", "elLastChild", "_ghostIsLast", "_ghostIsFirst", "firstChild", "direction", "targetBeforeFirstSwap", "differentLevel", "differentRowCol", "side1", "scrolledPastTop", "scrollBefore", "_getSwapDirection", "sibling", "dragIndex", "nextSibling", "moveVector", "_unsilent", "_cancelNextTick", "_globalDragOver", "order", "_generateId", "useAnimation", "items", "id", "store", "willInsertAfter", "onMoveFn", "retVal", "firstElRect", "sortableContentRect", "spacer", "lastElRect", "swapThreshold", "invertedSwapThreshold", "invertSwap", "isLastTarget", "mouseOnAxis", "targetLength", "targetS1", "targetS2", "invert", "_getInsertDirection", "str", "sum", "root", "inputs", "idx", "element", "_len", "_key", "autoScrolls", "scrollEl", "scrollRootEl", "scrolling", "lastAutoScrollX", "lastAutoScrollY", "touchEvt$1", "pointerElemChangedInterval", "AutoScrollPlugin", "AutoScroll", "_ref2", "clearPointerElemChangedInterval", "clearAutoScrolls", "autoScroll", "ogElemScroller", "newElem", "isFallback", "sens", "speed", "scrollThisInstance", "scrollCustomFn", "layersOut", "currentParent", "canScrollX", "canScrollY", "scrollWidth", "scrollHeight", "scrollPosX", "scrollPosY", "vx", "vy", "scrollOffsetY", "scrollOffsetX", "drop", "dispatchSortableEvent", "hideGhostForTarget", "unhideGhostForTarget", "toSortable", "Revert", "_ref3", "Remove", "_ref4", "parentSortable", "sortable_esm_default", "moveEndMorphMarker", "endMorphMarker", "childNode", "directive", "component", "hasSetHandleCorrectly", "currentComponent", "succeed", "masterEl", "groups"]
}
